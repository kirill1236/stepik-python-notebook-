Тема урока: sep, end, PEP 8
Необязательные параметры команды print

По умолчанию команда print() принимает несколько аргументов, выводит их через один пробел, после чего ставит перевод строки. Это поведение можно изменить, используя необязательные именованные параметры sep и end.



                                          Параметр sep
print ('aa' , 'bb' , 'cc')
ответ аа bb ccc

Как вы можете заметить, все строки выводятся с пробелом между друг другом – это неслучайное поведение. 
У команды print() есть параметр, который отвечает за разделение аргументов при выводе. 
Этот параметр называется sep (separator – разделитель). По умолчанию этот параметр равен символу пробела  . 
Следующие строки кода являются эквивалентными:

print('aa', 'bb', 'cc', sep=' ')
выводит aa bb cc 
Мы можем изменить параметр sep на любую другую строку, например, на символ звёздочки *.

Приведённый ниже код:

print('aa', 'bb', 'cc', sep='*')


Сейчас у нас аргументы разделены символом звёздочки *. Также в качестве параметра sep мы можем указать и переменную.

Приведённый ниже код:

minus = '-'
print('aa', 'bb', 'cc', sep=minus)

                  
выводит:

aa-bb-cc

plus = '+'

print ('a', 'b', 'c', sep=plus)

выводит 
a+b+c

                                                        Параметр end



Как вы можете заметить, после каждого print() курсор переходит на новую строку. 
И это поведение тоже не является случайным, потому что у команды print() есть параметр end, определяющий, что нужно добавить в конец вывода. 
По умолчанию параметр end равен символу перевода строки (\n).

Следующие строки кода являются эквивалентными:
print ("sasdsadsddsdsdsdds", end ='\n')
print ("sdsdsfdssssfsfsfsff", end='\n')

Если перевод строки делать не нужно или требуется указать специальное окончание для вывода, 
то следует явно указать значение для параметра end (можем указать через переменную, как и с параметром sep).

plus = '+'

print ('a', 'b' , 'c' ,  '' ,end=plus)
print('Буквы')

выводит a b c +Буквы


                                                       Примечания


Вызов команды print() с пустыми скобками делает перевод строки.

Приведённый ниже код:

print ('q')
print ('q')
print ()
print ('q')
print ('q')
print ()
print ('q')
print ()
print ('q')

выводит:

q
q

q
q

q

q

Примечание 2. Последовательность символов \n называется управляющей последовательностью и задаёт перевод строки.


print ('s', '\n' , 'o', 'n', '\n', sep='*' , end='#')

выводит 

s*
*o*n*
#

Примечание 3. Параметры sep и end можно устанавливать одновременно.

Приведённый ниже код:
print('a', 'b', 'c', sep='*', end='finish')

выводит:

a*b*cfinish

print ('s' 'o' 'n' 'i' 'c', end=' - hegehog')

выводит sonic - hegehog

Примечание 4. Для разных команд print() можно задавать разные параметры sep и end.

Приведённый ниже код:
arg1 = 'Hello'
sep1 = '_-_'
end2 = '+++'

print(arg1, 'everyone', sep=sep1, end='! ')
print('How', 'are', 'you', 'in', '2024?', sep=' ', end=end2)

выводит:

Hello_-_everyone! How are you in 2024?+++



























